// <auto-generated />
using System;
using JapaneseFlashcardApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JapaneseFlashcardApi.Migrations
{
    [DbContext(typeof(FlashcardDbContext))]
    partial class FlashcardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JapaneseFlashcardApi.Models.Flashcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("Example")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Hiragana")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<string>("Kanji")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Katakana")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("LastReviewedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("integer");

                    b.Property<int>("WordType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Difficulty");

                    b.HasIndex("IsFavorite");

                    b.HasIndex("WordType");

                    b.ToTable("Flashcards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 1,
                            CreatedDate = new DateTime(2025, 6, 7, 5, 52, 7, 336, DateTimeKind.Utc).AddTicks(9165),
                            Difficulty = 1,
                            Example = "私の犬はとても可愛いです。",
                            Hiragana = "いぬ",
                            IsFavorite = true,
                            Kanji = "犬",
                            Katakana = "",
                            LastReviewedDate = new DateTime(2025, 7, 2, 5, 52, 7, 336, DateTimeKind.Utc).AddTicks(9638),
                            Meaning = "狗",
                            ReviewCount = 3,
                            WordType = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = 3,
                            CreatedDate = new DateTime(2025, 6, 12, 5, 52, 7, 337, DateTimeKind.Utc).AddTicks(3735),
                            Difficulty = 1,
                            Example = "朝のコーヒーは美味しいです。",
                            Hiragana = "",
                            IsFavorite = false,
                            Kanji = "",
                            Katakana = "コーヒー",
                            LastReviewedDate = new DateTime(2025, 7, 4, 5, 52, 7, 337, DateTimeKind.Utc).AddTicks(3738),
                            Meaning = "咖啡",
                            ReviewCount = 5,
                            WordType = 2
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            CreatedDate = new DateTime(2025, 6, 17, 5, 52, 7, 337, DateTimeKind.Utc).AddTicks(3741),
                            Difficulty = 1,
                            Example = "おはようございます。",
                            Hiragana = "おはよう",
                            IsFavorite = true,
                            Kanji = "",
                            Katakana = "",
                            LastReviewedDate = new DateTime(2025, 7, 5, 5, 52, 7, 337, DateTimeKind.Utc).AddTicks(3741),
                            Meaning = "早安",
                            ReviewCount = 2,
                            WordType = 0
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            CreatedDate = new DateTime(2025, 6, 22, 5, 52, 7, 337, DateTimeKind.Utc).AddTicks(3744),
                            Difficulty = 2,
                            Example = "新しいコンピューターを買いました。",
                            Hiragana = "",
                            IsFavorite = false,
                            Kanji = "",
                            Katakana = "コンピューター",
                            LastReviewedDate = new DateTime(2025, 7, 6, 5, 52, 7, 337, DateTimeKind.Utc).AddTicks(3744),
                            Meaning = "電腦",
                            ReviewCount = 1,
                            WordType = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
